---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/7/19 0019 21:51
---

local DatingMainInfoView = class("DatingMainInfoView",BaseLayer)

function DatingMainInfoView:initData(mainInfo,tableMainInfo)
    self.mainInfo = mainInfo or {}
    self.state = self.mainInfo.state or EC_DatingScriptState.TRIGGER
    self.roleId = RoleDataMgr:getCurId()
    self.quality = self.mainInfo.quality or {}
    self.endIdList = self.mainInfo.endings or {}
    self.mainId = self.mainInfo.datingValue or 1
    self.datingTitle = tableMainInfo.datingTitle
    self.datingHead = tableMainInfo.datingHead
    self.endInfoList = {}
    self:initMainEndInfoList()
end

function DatingMainInfoView:initMainEndInfoList()
    print("self.mainId ",self.mainId)
    local data = clone(TabDataMgr:getData("FavorEnd"))
    for k, v in pairs(data) do
        if v.outside and v.outside == self.mainId then
            v.unLock = false
            for ie, vid in ipairs(self.endIdList) do
                if vid == v.id then
                    v.unLock = true
                    break
                end
            end
            table.insert(self.endInfoList,v)
        end
    end
end

function DatingMainInfoView:ctor(mainInfo,tableMainInfo)
    self.super.ctor(self)

    self:initData(mainInfo,tableMainInfo)
    self:init("lua.uiconfig.dating.datingMainInfoView")
end

function DatingMainInfoView:initUI(ui)
    self.super.initUI(self,ui)

    self.ui = ui

    self:initListView()
    self:initBtn()
    self:initAttributes()
    self:initOther()

    self.Button_enter:onClick(function()
        NewCityDataMgr:sendEnterMainLineDating()
    end)
end

function DatingMainInfoView:initOther()
    local Image_bg = TFDirector:getChildByPath(self.ui, "Image_bg")
    local Label_title = TFDirector:getChildByPath(Image_bg, "Label_title")
    local Label_title2 = TFDirector:getChildByPath(Image_bg, "Label_title2")
    local Image_line = TFDirector:getChildByPath(Image_bg, "Image_line")

    local widthTitle = Label_title:Size().width
    Label_title:setTextById(self.datingTitle)
    Label_title2:setTextById(self.datingHead)
    local disX = Label_title:Size().width - widthTitle

    Image_line:PosX(Image_line:PosX() + disX)
end

function DatingMainInfoView:initListView()
    local ScrollView_info = TFDirector:getChildByPath(self.ui, "ScrollView_info")
    self.Panel_item = TFDirector:getChildByPath(self.ui, "Panel_item")

    self.listView = UIListView:create(ScrollView_info)

    self:showListView()
end

function DatingMainInfoView:showListView()
    self.listView:removeAllItems()
    for i, v in ipairs(self.endInfoList) do
        local item = self.Panel_item:clone()
        item.data = v
        self:updateItem(item)
        self.listView:pushBackCustomItem(item)
    end
end

function DatingMainInfoView:updateItem(item)
    self.Panel_lock = TFDirector:getChildByPath(item, "Panel_lock")
    self.Panel_normal = TFDirector:getChildByPath(item, "Panel_normal")

    self.Panel_lock:setVisible(not item.data.unLock)
    self.Panel_normal:setVisible(item.data.unLock)

    self:updateNormalItem(item.data)
    self:updateLockItem(item.data)
end

function DatingMainInfoView:updateNormalItem(endInfo)
    local Image_normalIcon = TFDirector:getChildByPath(self.Panel_normal, "Image_normalIcon")
    local Label_title = TFDirector:getChildByPath(self.Panel_normal, "Label_title")
    local Label_des = TFDirector:getChildByPath(self.Panel_normal, "Label_des")
    local Image_reward = TFDirector:getChildByPath(self.Panel_normal, "Image_reward")
    local Image_icon = TFDirector:getChildByPath(Image_reward, "Image_icon")

    if endInfo.bonusIcon and #endInfo.bonusIcon > 0 then
        Image_icon:setTexture(endInfo.bonusIcon)
    end
    Image_normalIcon:setTexture(endInfo.cg)
    Image_normalIcon:Size(ccs(134,100))
    Label_title:setTextById(endInfo.title)
    Label_des:setTextById(endInfo.storyShow2)
end

function DatingMainInfoView:updateLockItem(endInfo)
    local Image_reward = TFDirector:getChildByPath(self.Panel_lock, "Image_reward")
    local Image_icon = TFDirector:getChildByPath(Image_reward, "Image_icon")

    if endInfo.bonusIcon and #endInfo.bonusIcon > 0 then
        Image_icon:setTexture(endInfo.bonusIcon)
    end
    local Label_des = TFDirector:getChildByPath(self.Panel_lock, "Label_des")
    Label_des:setTextById(endInfo.storyShow1)
end

function DatingMainInfoView:initBtn()
    self.Button_enter = TFDirector:getChildByPath(self.ui, "Button_enter")
    local Label_yuehui = self.Button_enter:getChildByName("Label_yuehui")
    local Label_cYuehui = self.Button_enter:getChildByName("Label_cYuehui")

    Label_yuehui:setVisible(self.state ~= EC_DatingScriptState.NO_FINISH)
    Label_cYuehui:setVisible(self.state == EC_DatingScriptState.NO_FINISH)
end

function DatingMainInfoView:enterMainDatingView()
    NewCityDataMgr:enterNewCity(EC_NewCityType.NewCity_MainLine)
end

function DatingMainInfoView:initAttributes()
    local datingVariable = TabDataMgr:getData("DatingVariable")
    local vIdList = RoleDataMgr:getDatingVariableToRole(self.roleId)
    print("self.quality ",self.quality)
    for i, v in ipairs(vIdList) do
        local qId = v
        local data = datingVariable[qId]
        if data then
            local value
            for i, v in ipairs(self.quality) do
                if v.qualityId == qId then
                    value = v.value or 0
                    break
                end
            end
            value = value or 0
            local maxValue = data.limit[2] or 100
            local Panel_attribute = TFDirector:getChildByPath(self.ui, "Panel_attribute"..i)
            local Label_aName = Panel_attribute:getChildByName("Label_aName")
            if data.name and data.name ~= 0 then
                Label_aName:setTextById(data.name)
            end
            --local Label_aValue = Panel_attribute:getChildByName("Label_aValue")
            local LoadingBar_pro = Panel_attribute:getChildByName("LoadingBar_pro")

            --Label_aValue:setText(value .. "/" .. maxValue)
            LoadingBar_pro:setPercent(value/maxValue*100)


            local Panel_progress = Panel_attribute:getChild("Panel_progress")
            print("value ",value)
            local progressidx = math.floor(value/maxValue*100/10)
            for i = 1, 10 do
                local image_progress = Panel_progress:getChild("Image_progress"..i)
                if i <= progressidx then
                    image_progress:setTexture("ui/newCity/city_main/jindu"..i..".png")
                else
                    image_progress:setTexture("ui/newCity/city_main/jindubg.png")
                end
            end

        end
    end
end

function DatingMainInfoView:onEnterMainLine()
    local isFirst, etranceconf = NewCityDataMgr:isFirtBegenDating(self.mainInfo)
    NewCityDataMgr:sendEnterMainLineDating()
    if isFirst then
        AlertManager:closeLayer(self)
        NewCityDataMgr:startEntrance(etranceconf, EC_DatingChoiceType.ChoiceScript)
    else
        self:enterMainDatingView()
    end
end

function DatingMainInfoView:registerEvents()
    EventMgr:addEventListener(self, EV_NEW_CITY.enterMainLine, handler(self.onEnterMainLine, self))
end

return DatingMainInfoView;
